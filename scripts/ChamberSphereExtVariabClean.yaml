variables:
  - Pin
  - Qin
  - Pout
  - Qout
  - radius
  - stress
  - tau
  - volume

derivatives:
  - dPin_dt
  - dQin_dt
  - dPout_dt
  - dQout_dt
  - dradius_dt
  - dstress_dt
  - dtau_dt
  - dvolume_dt

constants:
  - rho
  - thick0
  - radius0
  - W1
  - W2
  - eta
  - act
  - act_plus
  - sigma_max

time_dependent:
  - act
  - act_plus

helper_functions: |
  def re(radius):
      return radius + radius0

  def A(radius):
      return 4 * pi * re(radius)**2

  def Qnet(Qin, Qout):
      return Qin - Qout

  def dQnet_dt(dQin_dt, dQout_dt):
      return dQin_dt - dQout_dt

  def dvelo_dt(radius, Qin, Qout, dQin_dt, dQout_dt):
      reff = re(radius)
      A = 4 * pi * reff**2
      Q  = Qin - Qout
      dQ = dQin_dt - dQout_dt
      return (dQ / A) - 2.0 * Q * Q / (A * A * reff)

  def CG(radius):
      return (1 + (radius / radius0)) ** 2

  def dCG(radius, dradius_dt):
      return 2 * (1 + (radius / radius0)) * (1 / radius0) * dradius_dt

residuals:
  - rho * thick0 * dvelo_dt(radius, Qin, Qout, dQin_dt, dQout_dt) + (thick0 / radius0) * (1 + (radius / radius0)) * stress - Pout * CG(radius)

  - -stress + tau + 4 * (1 - CG(radius) ** -3) * (W1 + CG(radius) * W2) + 2 * eta * dCG(radius, dradius_dt) * (1 - 2 * CG(radius) ** -6)

  - 4 * pi * radius0 ** 2 * CG(radius) * dradius_dt - dvolume_dt

  - dtau_dt + act * tau - sigma_max * act_plus

  - Qin - Qout - dvolume_dt 

  - Pin - Pout
